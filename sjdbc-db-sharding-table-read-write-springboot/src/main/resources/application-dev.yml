spring:
  shardingsphere:
    dataSource:
      names: master0,master0slave,master1,master1slave
      master0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: qvYx8OaG
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3307/ds_3?characterEncoding=utf-8
        username: w_account
      master0slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: 63ucwRVV
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3308/ds_3?characterEncoding=utf-8
        username: r_account
      master1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: qvYx8OaG
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3309/ds_3?characterEncoding=utf-8
        username: w_account
      master1slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: 63ucwRVV
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3310/ds_3?characterEncoding=utf-8
        username: r_account
    props:
      sql:
        show: true
    sharding:
      masterSlaveRules:
        master0:
          masterDataSourceName: master0
          slaveDataSourceNames:
          - master0slave
          loadBalanceAlgorithmType: ROUND_ROBIN
        master1:
          masterDataSourceName: master1
          slaveDataSourceNames:
          - master1slave
          loadBalanceAlgorithmType: ROUND_ROBIN
      broadcastTables:
      - t_region_config
      - t_sys_config
      bindingTables:
      - t_order_base,t_order_item
      defaultDataSourceName: master0
      defaultDatabaseStrategy:
        inline:
          algorithmExpression: master$->{order_id % 2}
          shardingColumn: order_id
      tables:
        t_order_base:
          actualDataNodes: master$->{0..1}.t_order_base
          databaseStrategy:
            inline:
              algorithmExpression: master$->{order_id % 2}
              shardingColumn: order_id
        t_order_item:
          actualDataNodes: master$->{0..1}.t_order_item
          databaseStrategy:
            inline:
              algorithmExpression: master$->{order_id % 2}
              shardingColumn: order_id 
        t_user_order_mapping:
          actualDataNodes: master$->{0..1}.t_user_order_mapping
          databaseStrategy:
            inline:
              algorithmExpression: master$->{user_id % 2}
              shardingColumn: user_id